version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: memberships_local_django
    container_name: memberships_django
    depends_on:
      - postgres
      - mailhog
      - redis
    volumes:
      - ./backend:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8801:8000"
      - "5678:5678"
    command: /start

  qcluster:
    <<: *django
    image: memberships_local_qcluster
    container_name: memberships_qcluster
    ports: []
    command: /qcluster

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: memberships_production_postgres
    container_name: memberships_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5432:5432"

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: memberships_mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:6
    container_name: memberships_redis

  caddy:
    image: "caddy:2.1.1"
    restart: unless-stopped
    depends_on:
      - django
    env_file: ./.envs/.local/.caddy
    container_name: memberships_caddy
    volumes:
      - ./Caddyfile.local:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./backend/fanmo/media:/var/www/html/media
    ports:
      - "7070:80"
      - "7777:443"

  nuxt:
    build:
      context: .
      dockerfile: ./compose/local/nuxt/Dockerfile
    image: memberships_local_nuxt
    container_name: memberships_nuxt
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./.envs/.local/.nuxt
